{"cells":[{"cell_type":"code","execution_count":3,"metadata":{"colab":{"background_save":true},"executionInfo":{"elapsed":5,"status":"ok","timestamp":1741885816432,"user":{"displayName":"Ruby Ardha Apriadi","userId":"03144035947604429637"},"user_tz":-420},"id":"TGjc9qOcd1M_"},"outputs":[],"source":["#BFS algorithm in python.\n","\n","import collections\n","\n","#BFS algorithm\n","def bfs(graph, root):\n","\n","  visited, queue = set(), collections.deque([root])\n","  visited.add(root)\n","\n","  while queue:\n","\n","    #dequeue a vertex from queue\n","    vertex = queue.popleft()\n","    print(str(vertex) + \" \", end=\"\")\n","\n","    #if not visited, mark it is visited, and enqueue it\n","    for neighbour in graph[vertex]:\n","      if neighbour not in visited:\n","        visited.add(neighbour)\n","        queue.append(neighbour)\n","\n","  if _name_ == '_main_':\n","    graph = {0: [1,2], 1: [2], 2: [3], 3: [1,2]}\n","  print(\"following is Breadth first traversal\")\n","  bfs(graph, 0)"]}],"metadata":{"colab":{"authorship_tag":"ABX9TyMALRkgGOVA76Ve00yp2Bo0","name":"","version":""},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}