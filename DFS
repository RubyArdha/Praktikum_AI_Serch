{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyOBbqgov7k9jlfA10sD8PGg"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"st8M8KxLg7FO","executionInfo":{"status":"ok","timestamp":1741886368896,"user_tz":-420,"elapsed":40,"user":{"displayName":"Ruby Ardha Apriadi","userId":"03144035947604429637"}},"outputId":"49792f83-5ba9-4a80-de6c-ba94ea0f1e11"},"outputs":[{"output_type":"stream","name":"stdout","text":["berikut adalah penelusuran Depth First (dimulai dari node 2)\n","2 0 1 3 "]}],"source":["#python3 program toprint DFS traversal\n","#from a given graph\n","\n","from collections import defaultdict\n","\n","#kelas ini merepresentasikan sebuah graf yang diarahkan\n","#menggunakan representasi daftar kejadian\n","\n","class Graph:\n","\n","  #konstruktor\n","  def __init__(self):\n","\n","    #kamus default untuk menyimpan graf\n","    self.graph = defaultdict(list)\n","\n","  #fungsi untuk menambahkan tepi ke graf\n","  def addEdge(self, u, v):\n","    self.graph[u].append(v)\n","\n","  #fungsi yang digunakan oleh DFS\n","  def DFSUtil(self, v, visited):\n","\n","    #tanda node saat ini sebagai sudah dikunjungi\n","    #dan cetak\n","    visited.add(v)\n","    print(v, end=' ')\n","\n","    #panggil rekursif untuk semua titik ujung\n","    #yang berdekatan dengan titik ini\n","    for neighbour in self.graph[v]:\n","      if neighbour not in visited:\n","        self.DFSUtil(neighbour, visited)\n","\n","  #fungsi untuk melakukan peelusuran DFS. ini menggunakan\n","  #DFSUtil() rekursif\n","  def DFS(self, v):\n","\n","    #buat himpunan untuk menyimpan node yang sudah dikunjungi\n","    visited = set()\n","\n","    #panggil fungsi bantu rekursif\n","    #untuk mencetak penelusuran DFS\n","    self.DFSUtil(v, visited)\n","\n","#kode pengguna\n","if __name__ == \"__main__\":\n","  g = Graph()\n","  g.addEdge(0, 1)\n","  g.addEdge(0, 2)\n","  g.addEdge(1, 2)\n","  g.addEdge(2, 0)\n","  g.addEdge(2, 3)\n","  g.addEdge(3, 3)\n","\n","  print(\"berikut adalah penelusuran Depth First (dimulai dari node 2)\")\n","\n","  #panggil fungsi\n","  g.DFS(2)"]}]}